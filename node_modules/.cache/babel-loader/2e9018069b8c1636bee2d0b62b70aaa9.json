{"ast":null,"code":"var _jsxFileName = \"/Users/brendonjeanbaptiste/Desktop/ReactApp/expense/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport { useRef, useState } from 'react';\nimport './Expense.css';\nimport AvailabeExpenses from './AvailabeExpenses';\nimport AvailableCharts from './AvailabeChart';\nimport ExpenseItem from './ExpenseItem';\nimport { PieChart, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isEmpty = value => value.trim() === '';\n\n  const loadedExpenses = [];\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    Month: true,\n    Year: true,\n    Day: true,\n    Description: true,\n    Amount: true\n  });\n  const monthInputRef = useRef();\n  const yearInputRef = useRef();\n  const dayInputRef = useRef();\n  const descriptionInputRef = useRef();\n  const amountInputRef = useRef();\n\n  const confirmHandler = (event, expense) => {\n    event.preventDefault();\n    const enteredMonth = monthInputRef.current.value;\n    const enteredYear = yearInputRef.current.value;\n    const enteredDay = dayInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    const enteredAmount = amountInputRef.current.value;\n    const enteredMonthIsValid = !isEmpty(enteredMonth);\n    const enteredYearIsValid = !isEmpty(enteredYear);\n    const enteredDayIsValid = !isEmpty(enteredDay);\n    const enteredDescriptionIsValid = !isEmpty(enteredDescription);\n    const enteredAmountIsValid = !isEmpty(enteredAmount);\n    setFormInputsValidity({\n      Month: enteredMonthIsValid,\n      Year: enteredYearIsValid,\n      Day: enteredDayIsValid,\n      Description: enteredDescriptionIsValid,\n      Amount: enteredAmountIsValid\n    });\n    const formIsValid = enteredMonthIsValid && enteredYearIsValid && enteredDayIsValid && enteredAmountIsValid && enteredDescriptionIsValid;\n\n    if (!formIsValid) {\n      console.log(\"hello\");\n      return;\n    }\n\n    const loadedExpenses = {\n      Description: enteredDescription,\n      Year: enteredYear,\n      Amount: enteredAmount,\n      Day: enteredDay,\n      Month: enteredMonth\n    };\n    console.log(loadedExpenses);\n    fetch('https://expense-e9126-default-rtdb.firebaseio.com/expense.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        Month: loadedExpenses.Month,\n        Day: loadedExpenses.Day,\n        Description: loadedExpenses.Description,\n        Year: parseInt(loadedExpenses.Year),\n        Amount: parseInt(loadedExpenses.Amount)\n      })\n    });\n    monthInputRef.current.value = '';\n    yearInputRef.current.value = '';\n    dayInputRef.current.value = '';\n    descriptionInputRef.current.value = '';\n    amountInputRef.current.value = '';\n  };\n\n  console.log( /*#__PURE__*/_jsxDEV(AvailabeExpenses, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 13\n  }, this));\n  const state = {\n    labels: ['January', 'February', 'March', 'April', 'May'],\n    datasets: [{\n      label: 'Rainfall',\n      backgroundColor: ['#B21F00', '#C9DE00', '#2FDE00', '#00A6B4', '#6800B4'],\n      hoverBackgroundColor: ['#501800', '#4B5000', '#175000', '#003350', '#35014F'],\n      data: [65, 59, 80, 81, 56]\n    }]\n  };\n  return {\n    /* <div className=\"desktop1-desktop1\">\n     <span className=\"desktop1-text\">Expenses</span>\n     <form onSubmit={confirmHandler}>\n     <input className=\"desktop1-rectangle1\" type=\"text\" placeholder=\"Description\" ref={descriptionInputRef} />\n     <select className=\"desktop1-rectangle2\" defaultValue=\"\" ref={monthInputRef}>\n       <option value=\"\" disabled>  Choose a Month ... </option>\n       <option value=\"January\">January</option>\n       <option value=\"Feburuary\">Feburuary</option>\n       <option value=\"March\">March</option>\n       <option value=\"April\">April</option>\n       <option value=\"May\">May</option>\n       <option value=\"June\">June</option>\n       <option value=\"July\">July</option>\n       <option value=\"August\">August</option>\n       <option value=\"September\">September</option>\n       <option value=\"October\">October</option>\n       <option value=\"November\">November</option>\n       <option value=\"December\">December</option>\n     </select>\n     <input className=\"desktop1-rectangle3\" placeholder=\"Day\" type=\"number\"  min=\"1\" max=\"31\" ref={dayInputRef}></input>\n     <input className=\"desktop1-rectangle5\" placeholder=\"Amount\" type=\"number\"  min=\"1\" ref={amountInputRef}></input>\n     <input className=\"desktop1-rectangle4\" placeholder=\"Year\" type=\"number\" ref={yearInputRef}></input>\n     <button type='submit' className=\"desktop1-svg\" > Add </button>\n     </form>\n        <select className=\"desktop1-rectangle6\" defaultValue=\"\" >\n       <option value=\"\" disabled>  Choose a Month ... </option>\n       <option value=\"January\">January</option>\n       <option value=\"Feburuary\">Feburuary</option>\n       <option value=\"March\">March</option>\n       <option value=\"April\">April</option>\n       <option value=\"May\">May</option>\n       <option value=\"June\">June</option>\n       <option value=\"July\">July</option>\n       <option value=\"August\">August</option>\n       <option value=\"September\">September</option>\n       <option value=\"October\">October</option>\n       <option value=\"November\">November</option>\n       <option value=\"December\">December</option>\n     </select>\n     \n     <input className=\"desktop1-rectangle7\"placeholder=\"Year\" type=\"number\"></input>\n     \n     \n     <button className=\"desktop1-svg1\">Search</button>\n     <div className = \"desktop1-svg2\"></div>\n     <span className=\"desktop1-text1\">Search Expenses</span>\n     <div className='list-container'>\n       {<AvailabeExpenses month = {''} year = {''}/>}\n     </div>\n    </div>\n    {<AvailableCharts month = {''} year = {''}/>} */\n  };\n} // import {useState} from 'react';\n// const App = () => {\n//   const min = 1;\n//   const max = 100;\n//   const [value, setValue] = useState(1);\n//   const handleChange = event => {\n//     const value = Math.max(min, Math.min(max, Number(event.target.value)));\n//     setValue(value);\n//   };\n//   console.log(value);\n//   console.log(typeof value);\n//   return (\n//     <div>\n//       <h2>Min 1 / Max 100</h2>\n//       <h3>1500 / -50</h3>\n//       <input\n//         type=\"number\"\n//         placeholder=\"Your fav number\"\n//         value={value}\n//         onChange={handleChange}\n//       />\n//     </div>\n//   );\n// };\n// export default App;\n\n\n_s(App, \"zEsi5518e1VaHPBS+Yo8tvPPba0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useRef","useState","AvailabeExpenses","AvailableCharts","ExpenseItem","PieChart","Pie","App","isEmpty","value","trim","loadedExpenses","formInputsValidity","setFormInputsValidity","Month","Year","Day","Description","Amount","monthInputRef","yearInputRef","dayInputRef","descriptionInputRef","amountInputRef","confirmHandler","event","expense","preventDefault","enteredMonth","current","enteredYear","enteredDay","enteredDescription","enteredAmount","enteredMonthIsValid","enteredYearIsValid","enteredDayIsValid","enteredDescriptionIsValid","enteredAmountIsValid","formIsValid","console","log","fetch","method","body","JSON","stringify","parseInt","state","labels","datasets","label","backgroundColor","hoverBackgroundColor","data"],"sources":["/Users/brendonjeanbaptiste/Desktop/ReactApp/expense/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport { useRef, useState } from 'react';\nimport './Expense.css';\nimport AvailabeExpenses from './AvailabeExpenses'\nimport AvailableCharts from './AvailabeChart'\nimport ExpenseItem from './ExpenseItem'\nimport { PieChart, Pie} from 'react-chartjs-2';\n\n\n\n\n  \nfunction App() {\nconst isEmpty = (value) => value.trim() === '';\nconst loadedExpenses = [];\n\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    Month: true,\n    Year: true,\n    Day: true,\n    Description: true,\n    Amount: true,\n  });\n\n  \n  const monthInputRef = useRef();\n  const yearInputRef = useRef();\n  const dayInputRef = useRef();\n  const descriptionInputRef = useRef();\n  const amountInputRef = useRef();\n\n  const confirmHandler = (event,expense) => {\n    event.preventDefault();\n\n    const enteredMonth = monthInputRef.current.value;\n    const enteredYear = yearInputRef.current.value;\n    const enteredDay = dayInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    const enteredAmount= amountInputRef.current.value;\n\n    const enteredMonthIsValid = !isEmpty(enteredMonth);\n    const enteredYearIsValid = !isEmpty(enteredYear);\n    const enteredDayIsValid = !isEmpty(enteredDay);\n    const enteredDescriptionIsValid = !isEmpty(enteredDescription);\n    const enteredAmountIsValid = !isEmpty(enteredAmount);\n\n    setFormInputsValidity({\n      Month: enteredMonthIsValid,\n      Year: enteredYearIsValid,\n      Day: enteredDayIsValid,\n      Description: enteredDescriptionIsValid,\n      Amount: enteredAmountIsValid,\n    });\n\n    const formIsValid =\n      enteredMonthIsValid &&\n      enteredYearIsValid &&\n      enteredDayIsValid &&\n      enteredAmountIsValid &&\n      enteredDescriptionIsValid;\n    \n    if (!formIsValid) {\n      console.log(\"hello\")\n      return;\n    }\n\n    \n      const loadedExpenses = {\n        Description: enteredDescription,\n        Year: enteredYear,\n        Amount: enteredAmount,\n        Day: enteredDay,\n        Month: enteredMonth,\n      }\n\n      console.log(loadedExpenses)\n  \n\n      fetch('https://expense-e9126-default-rtdb.firebaseio.com/expense.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          Month: loadedExpenses.Month,\n          Day: loadedExpenses.Day,\n          Description: loadedExpenses.Description,\n          Year: parseInt(loadedExpenses.Year),\n          Amount: parseInt(loadedExpenses.Amount)\n    \n        })\n      });\n    \n      monthInputRef.current.value = '';\n      yearInputRef.current.value = '';\n      dayInputRef.current.value = '';\n      descriptionInputRef.current.value= '';\n      amountInputRef.current.value= '';\n  };\n\n\n\n\n\n\nconsole.log(<AvailabeExpenses/>)\nconst state = {\n  labels: ['January', 'February', 'March',\n           'April', 'May'],\n  datasets: [\n    {\n      label: 'Rainfall',\n      backgroundColor: [\n        '#B21F00',\n        '#C9DE00',\n        '#2FDE00',\n        '#00A6B4',\n        '#6800B4'\n      ],\n      hoverBackgroundColor: [\n      '#501800',\n      '#4B5000',\n      '#175000',\n      '#003350',\n      '#35014F'\n      ],\n      data: [65, 59, 80, 81, 56]\n    }\n  ]\n}\n\n  return (\n    \n      {/* <div className=\"desktop1-desktop1\">\n        <span className=\"desktop1-text\">Expenses</span>\n        <form onSubmit={confirmHandler}>\n        <input className=\"desktop1-rectangle1\" type=\"text\" placeholder=\"Description\" ref={descriptionInputRef} />\n        <select className=\"desktop1-rectangle2\" defaultValue=\"\" ref={monthInputRef}>\n          <option value=\"\" disabled>  Choose a Month ... </option>\n          <option value=\"January\">January</option>\n          <option value=\"Feburuary\">Feburuary</option>\n          <option value=\"March\">March</option>\n          <option value=\"April\">April</option>\n          <option value=\"May\">May</option>\n          <option value=\"June\">June</option>\n          <option value=\"July\">July</option>\n          <option value=\"August\">August</option>\n          <option value=\"September\">September</option>\n          <option value=\"October\">October</option>\n          <option value=\"November\">November</option>\n          <option value=\"December\">December</option>\n        </select>\n        <input className=\"desktop1-rectangle3\" placeholder=\"Day\" type=\"number\"  min=\"1\" max=\"31\" ref={dayInputRef}></input>\n        <input className=\"desktop1-rectangle5\" placeholder=\"Amount\" type=\"number\"  min=\"1\" ref={amountInputRef}></input>\n        <input className=\"desktop1-rectangle4\" placeholder=\"Year\" type=\"number\" ref={yearInputRef}></input>\n        <button type='submit' className=\"desktop1-svg\" > Add </button>\n        </form>\n  \n        <select className=\"desktop1-rectangle6\" defaultValue=\"\" >\n          <option value=\"\" disabled>  Choose a Month ... </option>\n          <option value=\"January\">January</option>\n          <option value=\"Feburuary\">Feburuary</option>\n          <option value=\"March\">March</option>\n          <option value=\"April\">April</option>\n          <option value=\"May\">May</option>\n          <option value=\"June\">June</option>\n          <option value=\"July\">July</option>\n          <option value=\"August\">August</option>\n          <option value=\"September\">September</option>\n          <option value=\"October\">October</option>\n          <option value=\"November\">November</option>\n          <option value=\"December\">December</option>\n        </select>\n        \n        <input className=\"desktop1-rectangle7\"placeholder=\"Year\" type=\"number\"></input>\n        \n        \n        <button className=\"desktop1-svg1\">Search</button>\n        <div className = \"desktop1-svg2\"></div>\n        <span className=\"desktop1-text1\">Search Expenses</span>\n        <div className='list-container'>\n          {<AvailabeExpenses month = {''} year = {''}/>}\n        </div>\n      </div>\n      {<AvailableCharts month = {''} year = {''}/>} */}\n     \n    \n    \n  );\n\n}\n\n\n\n// import {useState} from 'react';\n\n// const App = () => {\n//   const min = 1;\n//   const max = 100;\n\n//   const [value, setValue] = useState(1);\n\n//   const handleChange = event => {\n//     const value = Math.max(min, Math.min(max, Number(event.target.value)));\n//     setValue(value);\n//   };\n\n//   console.log(value);\n//   console.log(typeof value);\n\n//   return (\n//     <div>\n//       <h2>Min 1 / Max 100</h2>\n//       <h3>1500 / -50</h3>\n//       <input\n//         type=\"number\"\n//         placeholder=\"Your fav number\"\n//         value={value}\n//         onChange={handleChange}\n//       />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\nexport default App;\n"],"mappings":"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gBAAD;IAAA;IAAA;IAAA;EAAA,QAAZ;EACA,MAAMO,KAAK,GAAG;IACZC,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EACC,OADD,EACU,KADV,CADI;IAGZC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,UADT;MAEEC,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,EAIf,SAJe,EAKf,SALe,CAFnB;MASEC,oBAAoB,EAAE,CACtB,SADsB,EAEtB,SAFsB,EAGtB,SAHsB,EAItB,SAJsB,EAKtB,SALsB,CATxB;MAgBEC,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB;IAhBR,CADQ;EAHE,CAAd;EAyBE,OAEI;IAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlDM,CAFJ;AA2DD,C,CAID;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;GAlNS/C,G;;KAAAA,G;AAsNT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}